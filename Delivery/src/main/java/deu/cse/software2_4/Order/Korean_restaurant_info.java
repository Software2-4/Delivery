/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package deu.cse.software2_4.Order;

import deu.cse.software2_4.Purchase.Purchase;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author KMS
 */
public class Korean_restaurant_info extends javax.swing.JFrame {

    String restaurant_info;
    ArrayList<String> restaurantlist = new ArrayList<>();
    ArrayList<String> menuaddlist = new ArrayList<>();
    int price=0;
    int menunum = 0;
    
    /**
     * Creates new form korean_restaurant_info
     */
    public Korean_restaurant_info() {
        initComponents();
        setSize(420, 600);
        setLocationRelativeTo(null);
        try {
            ShowRestaurant();
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        Korean = new javax.swing.JLabel();
        menu_KR = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        restaurant_list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        menu_list = new javax.swing.JList<>();
        restaurant_KR = new javax.swing.JLabel();
        delete_KR = new javax.swing.JButton();
        add_KR = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        menuadd_list = new javax.swing.JList<>();
        price_KR = new javax.swing.JLabel();
        total_price = new javax.swing.JTextField();
        order = new javax.swing.JButton();
        select_menu_KR = new javax.swing.JLabel();
        jButton_Back = new javax.swing.JButton();
        price_KR1 = new javax.swing.JLabel();
        request = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Korean.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        Korean.setText("한식");
        Korean.setName(""); // NOI18N

        menu_KR.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        menu_KR.setText("메뉴");

        jScrollPane1.setViewportView(restaurant_list);

        jScrollPane2.setViewportView(menu_list);

        restaurant_KR.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        restaurant_KR.setText("식당");

        delete_KR.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        delete_KR.setText("삭제");
        delete_KR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_KRActionPerformed(evt);
            }
        });

        add_KR.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        add_KR.setText("추가");
        add_KR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_KRActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(menuadd_list);

        price_KR.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        price_KR.setText("가격 : ");

        order.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        order.setText("주문");
        order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderActionPerformed(evt);
            }
        });

        select_menu_KR.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        select_menu_KR.setText("선택한 메뉴");

        jButton_Back.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jButton_Back.setText("뒤로 가기");
        jButton_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BackActionPerformed(evt);
            }
        });

        price_KR1.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        price_KR1.setText("요청사항 :");

        request.setText("비어있음");

        jButton1.setText("선택");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Korean, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Back))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menu_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(price_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(total_price))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(add_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(delete_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addComponent(jScrollPane4)
                            .addComponent(order, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(select_menu_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(restaurant_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(price_KR1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(request, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Korean, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restaurant_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menu_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(select_menu_KR, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(price_KR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(total_price, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(price_KR1, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(request))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(order, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BackActionPerformed
        dispose();
    }//GEN-LAST:event_jButton_BackActionPerformed

    private void orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderActionPerformed
        String menuName;
        String[] menunameArry;
        List<String> list = new ArrayList<>();
        int number = menuaddlist.size();
        for(int i=0; i<number; i++){
            menunameArry = (menuaddlist.get(i)).split("/");
            list.add(menunameArry[0]+",");
        }
        
        Order neworder;
        if((request.getText()).equals("비어있음")){
            neworder = new NoOptionOrder(list, price);
            
            
        }else{
            neworder = new OptionOrder(list, price);
            neworder.request(request.getText());
        }
        
  
            
        
        FileOutputStream output;
        try {
            output = new FileOutputStream("/Users/gyueop/Documents/문서 - JeongGyuEop의 MacBook Pro/GIT/Delivery/Delivery/DB/Order.txt", true);
            OutputStreamWriter writer = new OutputStreamWriter(output, "UTF-8");
            BufferedWriter out = new BufferedWriter(writer);
            
            out.write(neworder.returnOrder());
            
            out.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        setVisible(false);
        Purchase object = new Purchase();
        object.setVisible(true);
    }//GEN-LAST:event_orderActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        String menu_info;
        ArrayList<String> menulist = new ArrayList<>();
        menu_list.setModel(new DefaultListModel());
        DefaultListModel menu_model = (DefaultListModel) menu_list.getModel();
        
        FileInputStream input;
        String[] menu_arry;
        int m = -1;
        
        try {
            input = new FileInputStream("/Users/gyueop/Documents/문서 - JeongGyuEop의 MacBook Pro/GIT/Delivery/Delivery/DB/menu.txt");
            InputStreamReader menu_reader = new InputStreamReader(input, "UTF-8");
            BufferedReader menu_in = new BufferedReader(menu_reader);
            
        while((menu_info=menu_in.readLine())!=null){
            menu_arry = menu_info.split("/");
            if(menu_arry[0].equals(restaurant_list.getSelectedValue())){
                menulist.add(menu_arry[1]+"/"+menu_arry[2]);
                m++;
            }
        }
        for(int n=0; n<m+1; n++){
            menu_model.addElement(menulist.get(n));
        }
        
        
        menuadd_list.setModel(new DefaultListModel());
        DefaultListModel menuadd_model = (DefaultListModel) menuadd_list.getModel();
        
        menuaddlist.clear();
        menunum = 0;
        menuadd_model.clear();
        price = 0;
        total_price.setText(Integer.toString(price));

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Korean_restaurant_info.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void add_KRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_KRActionPerformed
        // TODO add your handling code here:
        //메뉴를 추가하는 버튼
        String[] menu_price = (menu_list.getSelectedValue()).split("/");
        int pricemenu = Integer.parseInt(menu_price[1]);
        price += pricemenu;
        
        menuadd_list.setModel(new DefaultListModel());
        DefaultListModel menuadd_model = (DefaultListModel) menuadd_list.getModel();
        
        menuaddlist.add(menu_list.getSelectedValue());
        menunum++;
        
        for(int n=0; n<menunum; n++){
            menuadd_model.addElement(menuaddlist.get(n));
        }
        
        total_price.setText(Integer.toString(price));
        
        
        
        
    }//GEN-LAST:event_add_KRActionPerformed

    private void delete_KRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_KRActionPerformed
        // TODO add your handling code here:
        String[] delete_menu = (menuadd_list.getSelectedValue()).split("/");
        int delete_price = Integer.parseInt(delete_menu[1]);
        price = price - delete_price;
        
        menuadd_list.setModel(new DefaultListModel());
        DefaultListModel menuadd_model = (DefaultListModel) menuadd_list.getModel();
        
        menuaddlist.remove(menu_list.getSelectedIndex()-1);
        menunum--;
        
        for(int n=0; n<menunum; n++){
            menuadd_model.addElement(menuaddlist.get(n));
        }
        total_price.setText(Integer.toString(price));
    }//GEN-LAST:event_delete_KRActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Korean_restaurant_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Korean_restaurant_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Korean_restaurant_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Korean_restaurant_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Korean_restaurant_info().setVisible(true);
            }
        });
        
    }
    
    public void ShowRestaurant() throws FileNotFoundException, UnsupportedEncodingException, IOException{
        
        FileInputStream input;
        String[] restaurant_arry;
        int i = -1;
        
        restaurant_list.setModel(new DefaultListModel());
        DefaultListModel model = (DefaultListModel) restaurant_list.getModel();
        
        
        input = new FileInputStream("/Users/gyueop/Documents/문서 - JeongGyuEop의 MacBook Pro/GIT/Delivery/Delivery/DB/Restaurant.txt");
        InputStreamReader reader = new InputStreamReader(input, "UTF-8");
        BufferedReader in = new BufferedReader(reader);
        
        while((restaurant_info=in.readLine()) != null){
            restaurant_arry = restaurant_info.split("/");
            if(restaurant_arry[3].equals("한식")){
                restaurantlist.add(restaurant_arry[1]);
                i++;
            }
        }
        for(int j=0; j<i+1; j++){
                model.addElement(restaurantlist.get(j));
        }
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Korean;
    private javax.swing.JButton add_KR;
    private javax.swing.JButton delete_KR;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_Back;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel menu_KR;
    private javax.swing.JList<String> menu_list;
    private javax.swing.JList<String> menuadd_list;
    private javax.swing.JButton order;
    private javax.swing.JLabel price_KR;
    private javax.swing.JLabel price_KR1;
    private javax.swing.JTextField request;
    private javax.swing.JLabel restaurant_KR;
    private javax.swing.JList<String> restaurant_list;
    private javax.swing.JLabel select_menu_KR;
    private javax.swing.JTextField total_price;
    // End of variables declaration//GEN-END:variables
  

}
